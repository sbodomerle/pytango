---------------------------------------------------
List of changes for PyTango 3.0.4
---------------------------------------------------

- Added PyTango version information.

- Filled missing pydoc documentation.

- Added support for Tango 6.1:
  - stateless event subscription
  - support set_write_value for SPECTRUM and IMAGE attributes

- Added missing methods to Util class:
  - get_ds_inst_name
  - get_ds_exec_name
  - get_host_name
  - get_tango_lib_release
  - get_version_str
  - get_server_version

- Added missing methods to DeviceImpl
  - adm_name
  - remove_attribute

- Added missing methods to Database class:
  - get_device_exported_for_class
  - get_device_class_list
  - get_alias
  - get_device_alias
  - get_db_host
  - get_db_port
  - get_db_port_num
  - get_server_info
  - put_server_info
  - delete_server_info
  - get_host_list
  - get_server_class_list
  - get_server_name_list
  - get_instance_name_list
  - get_server_list
  - get_services
  - register_service
  - unregister_service
  - get_object_list

- fixed bug: It is not possible to know the set value of a scalar attribute.
  Added a new member to AttributeValue called scalar_w_value. It had to be done
  this way in order to maintain compatibility with older versions.

- fixed bug: the same property name in different devices of the same server 
  always have the same value.

- fixed bug: registering for events on a non omni thread is not possible
  (usually a Python thread)

- fixed bug: deadlock between CHANGE and ATTR_CONF events (introduced in ver 3.0.3)

---------------------------------------------------
List of changes for PyTango 3.0.3
---------------------------------------------------

- Add support for 64 bits data type introduced by Tango 6

- Add another simple way to write attribute in the DeviceProxy and AttributeProxy classes

- Added Tango group wrapping

- Add wrapping of Database::put_device_alias() and Database::delete_device_alias()

- Add wrapping of Util::get_class_list()

- Add wrapping of DeviceClass::device_destroyer() and get_device_list()

- Add wrapping for the C++ AttributeInfoEx data type and associated methods foe extended attribute configuration

- Modification of the generic device_factory() method to handle dynamic attribute creation

- Change in the signature of the add_attribute() method

- Add wrapping of the remove_attribute() method

- Reading an empty SPECTRUM or IMAGE attribute will now return an empty list instead of an error

- Print traceback in case of exception thrown by the event callback or by the delete_device method

- Add wrapping of the new attribute configuration event

- Added DeviceProxy.read_attribute_as_str() methods and AttributeProxy.read_as_str() methods to get attribute value as Python string

- Better detection if the device server is used with a debugger

- Better management of the Python GIL in the client part. It is now released when calling pure C++ methods

- Fix bug in methods returning devices (now they return the Python object and the C++ one)

- Remove the binding of the vector<DeviceImpl *> class

- Fix bug in case of heavy use of events (if several threads created by the ORB to handle them)

- Fix bug in case an event is received while the main thread is doing an unsubscribe_event()

- Fix deadlock when several classes embedded in the same device server and one class talking to the other one

- Fix deadlock in case of exception thrown by the C++ part of the subsribe_event() method

- Fix bug when creating AttributeProxy instance without TANGO_HOST defined and with a fully qualified attribute name


