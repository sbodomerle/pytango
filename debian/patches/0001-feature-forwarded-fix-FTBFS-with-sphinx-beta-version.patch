From: =?UTF-8?q?Picca=20Fr=C3=A9d=C3=A9ric-Emmanuel?= <picca@debian.org>
Date: Tue, 7 May 2013 09:26:08 +0200
Subject: feature forwarded fix FTBFS with sphinx beta version

---
 setup.py |   14 ++++++--------
 1 file changed, 6 insertions(+), 8 deletions(-)

diff --git a/setup.py b/setup.py
index b8575f4..b3506bd 100644
--- a/setup.py
+++ b/setup.py
@@ -33,6 +33,7 @@ from distutils.command.build import build as dftbuild
 from distutils.command.build_ext import build_ext as dftbuild_ext
 from distutils.command.install import install as dftinstall
 from distutils.unixccompiler import UnixCCompiler
+from distutils.version import StrictVersion as V
 import distutils.sysconfig
 
 try:
@@ -46,8 +47,7 @@ except:
 try:
     import IPython
     _IPY_ROOT = os.path.dirname(os.path.abspath(IPython.__file__))
-    _IPY_VER = list(map(int, IPython.__version__.split(".")[:2]))
-    if _IPY_VER > [0,10]:
+    if V(IPython.__version__) > V('0.10'):
         import IPython.utils.path
         get_ipython_dir = IPython.utils.path.get_ipython_dir
     else:
@@ -151,7 +151,7 @@ class build(dftbuild):
             self.warn("NOT using numpy: numpy available but C source is not")
         
         if IPython and not self.without_ipython:
-            if _IPY_VER > [0,10]:
+            if V(IPython.__version__) > V("0.10"):
                 self.distribution.py_modules.append('IPython.config.profile.tango.ipython_config')
             else:
                 self.distribution.py_modules.append('IPython.Extensions.ipy_profile_tango')
@@ -182,8 +182,7 @@ class build(dftbuild):
             return False
         if sphinx is None:
             return False
-        v = list(map(int, sphinx.__version__.split(".")))
-        if v <= [0,6,5]:
+        if V(sphinx.__version__) <= V("0.6.5"):
             print("Documentation will not be generated: sphinx version (%s) too low. Needs 0.6.6" % sphinx.__version__)
             return False 
         setup_dir = os.path.dirname(os.path.abspath(__file__))
@@ -206,9 +205,8 @@ class build_ext(dftbuild_ext):
             import subprocess
             compiler = self.compiler.compiler
             pipe = subprocess.Popen(compiler + ["-dumpversion"], stdout=subprocess.PIPE).stdout
-            gcc_ver = pipe.readlines()[0].decode().strip().split(".")
-            gcc_ver = list(map(int, gcc_ver))
-            if gcc_ver >= [4,3,3]:
+            gcc_ver = pipe.readlines()[0].decode().strip()
+            if V(gcc_ver) >= V("4.3.3"):
                 self.use_cpp_0x = True
         dftbuild_ext.build_extensions(self)
 
